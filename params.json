{"name":"AutoProtobuf","tagline":"A .NET library to automatically setup protobuf serializations on types without the need to use attributes","body":"#Usage\r\n\r\nSimply call the following once in your process before serializing with ProtoBuf:\r\n\r\n```c#\r\nSerializerBuilder.Build(complexClass);\r\n```\r\n\r\nIf the class already has a serializer generated, the call does nothing.\r\n\r\n#What can it do?\r\n\r\nGenerates serializers for any type protobuf-net can serialize. It does this by calling protobuf-net's RuntimeTypeModel and adding all fields to the serializaton model for each class. \r\n\r\nIt will navigate an object's inheritance tree so that inherited fields are also serialized properly.\r\n\r\n#Known limitations\r\nBecause ProtoBuf-net needs to have the inheritance tree defined all at once, the serializer builder will fail when called for an object that inherits from the same concrete base class as a previously built object. In such a case use ProtoBuf-net attributes.\r\n\r\nDoesn't works with DataTables, please use [protobuf-net-data](http://www.nuget.org/packages/protobuf-net-data) for serializing those.\r\n\r\nThis is also a very early release so use with caution.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}